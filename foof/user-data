#cloud-config
autoinstall:
  version: 1

  ssh:
    install-server: true
    # option "allow-pw" defaults to `true` if authorized_keys is empty, `false` otherwise.
    allow-pw: false

  snaps:
    - name: microk8s
      channel: "1.28"
      classic: true

  # "[late-commands] are run in the installer environment with the installed system mounted at /target."
  late-commands:
    # randomly generate the hostname & show the IP at boot
    # dump the IP out at login screen
    - echo "Ubuntu 22.04 LTS \nIP - $(hostname -I)\n" > /target/etc/issue
    ### Setting up the screen time out and ignore lid closed 
    - sed -ie 's/GRUB_CMDLINE_LINUX_DEFAULT.*/GRUB_CMDLINE_LINUX_DEFAULT="consoleblank=60"/' /target/etc/default/grub
    - sed -ie 's/#HandleLidSwitch=.*/HandleLidSwitch=ignore/' /target/etc/systemd/logind.conf
    - sed -ie 's/#LidSwitchIgnoreInhibited=.*/LidSwitchIgnoreInhibited=no/' /target/etc/systemd/logind.conf
    # storage was a pain in the ass and merged multiple things, I just want a 100% use of the fs. (alt option: https://gist.github.com/anedward01/b68e00bb2dcfa4f1335cd4590cbc8484#file-user-data-L97-L199)
    #- curtin in-target --target=/target -- lvextend -l +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv
    #- curtin in-target --target=/target -- resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv

  user-data:
    disable_root: true
    timezone: America/Chicago
    package_upgrade: false
    users:
      - name: ops
        primary_group: users
        groups: 
          - sudo
          - microk8s
        lock_passwd: true
        # don't need PW since using SSH, leaving this in though...
        # password is "changeme" - created with `docker run -it --rm alpine mkpasswd --method=SHA-512`
        # passwd: "$5$IWwNqL9VUSDoc4Jv$DEUGR.cZQcbz/QvdCOmU13fX5ZW0rANg8LqkAtX3nBA"
        shell: /bin/bash
        ssh_import_id:
          - gh:f0rk3d
        sudo: ALL=(ALL) NOPASSWD:ALL
